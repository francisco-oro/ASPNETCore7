<?xml version="1.0"?>
<doc>
    <assembly>
        <name>CitiesManager.WebAPI</name>
    </assembly>
    <members>
        <member name="T:CitiesManager.WebAPI.Controllers.v1.AccountController">
            <summary>
            Manges user authentication and registration within the application. 
            </summary>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.v1.AccountController.#ctor(Microsoft.AspNetCore.Identity.UserManager{CitiesManager.Core.Identity.ApplicationUser},Microsoft.AspNetCore.Identity.SignInManager{CitiesManager.Core.Identity.ApplicationUser},Microsoft.AspNetCore.Identity.RoleManager{CitiesManager.Core.Identity.ApplicationRole})">
            <summary>
            Constructor method with DI 
            </summary>
            <param name="userManager">Responsible for creating, deleting and modifying existing users</param>
            <param name="signInManager">Manages the user sign-in and sign-out of in the application</param>
            <param name="roleManager">Manages rol-based authentication and authorization</param>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.v1.AccountController.PostRegister(CitiesManager.Core.DTO.RegisterDTO)">
            <summary>
            Handles user registration POST requests to /api/v1.0/account/register 
            </summary>
            <param name="registerDto">Register Data Transfer Object</param>
            <returns>A status 200 response with the user details if the registration was successful or a status
            400 response with the error message if the request is not valid</returns>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.v1.AccountController.IsEmailAlreadyRegistered(System.String)">
            <summary>
            Handles duplicate-email verification GET requests to /api/v1.0/account/IsEmailAlreadyRegistered 
            </summary>
            <param name="email">email address in string format</param>
            <returns>A status 200 response with true value if the user doesn't exist and false if the user already exists in the database </returns>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.v1.AccountController.PostLogin(CitiesManager.Core.DTO.LoginDTO)">
            <summary>
            Handles login POST requests to /api/v1.0/account/login
            </summary>
            <param name="loginDto">Login Data Transfer Object</param>
            <returns>A status 200 response with the user details if the login was successful or a status
            400 response with the error message if the request is not valid</returns>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.v1.AccountController.GetLogout">
            <summary>
            Handles logout GET requests to /api/v1.0/account/login
            </summary>
            <returns>A no content status 204 respose</returns>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.v1.CitiesController.GetCities">
            <summary>
            Gets a list of cities (including city Id and city name) from 'cities' table
            </summary>
            <returns></returns>
        </member>
        <member name="M:CitiesManager.WebAPI.Controllers.v2.CitiesController.GetCities">
            <summary>
            Gets a list of cities (including city Id and city name) from 'cities' table
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
